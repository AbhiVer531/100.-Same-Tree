# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right

class Solution:
    def isSameTree(self, p: Optional[TreeNode], q: Optional[TreeNode]) -> bool:
        def compare(p,q):
            if p is None and q is None:
                return True
            elif p is None and q:
                return False
            elif p and q is None:
                return False
            if p.val != q.val:
                return False
            leftSubTrees = compare(p.left,q.left)
            rightSubTrees = compare(p.right,q.right)
            if leftSubTrees and rightSubTrees:
                return True
            else:
                return False
        return compare(p,q)
